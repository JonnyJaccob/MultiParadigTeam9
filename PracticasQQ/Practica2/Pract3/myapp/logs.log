INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
ERROR:app:Exception on / [GET]
Traceback (most recent call last):
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2505, in get_property
    return self._props[key]
           ~~~~~~~~~~~^^^^^
KeyError: 'ventas'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask\app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask\app.py", line 869, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask\app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask\app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\PracticasQQ\Practica2\Pract3\myapp\rutas\cliente\clientes.py", line 14, in inicial
    clientes = Cliente.query.all()
               ^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask_sqlalchemy\model.py", line 22, in __get__
    return cls.query_class(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\query.py", line 276, in __init__
    self._set_entities(entities)
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\query.py", line 288, in _set_entities
    self._raw_columns = [
                        ^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\query.py", line 289, in <listcomp>
    coercions.expect(
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\sql\coercions.py", line 406, in expect
    insp._post_inspect
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 1253, in __get__
    obj.__dict__[self.__name__] = result = self.fget(obj)
                                           ^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2707, in _post_inspect
    self._check_configure()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2386, in _check_configure
    _configure_registries({self.registry}, cascade=True)
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 4199, in _configure_registries
    _do_configure_registries(registries, cascade)
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 4240, in _do_configure_registries
    mapper._post_configure_properties()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2403, in _post_configure_properties
    prop.init()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\interfaces.py", line 579, in init
    self.do_init()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\relationships.py", line 1640, in do_init
    self._generate_backref()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\relationships.py", line 2129, in _generate_backref
    self._add_reverse_property(self.back_populates)
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\relationships.py", line 1571, in _add_reverse_property
    other = self.mapper.get_property(key, _configure_mappers=False)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2507, in get_property
    raise sa_exc.InvalidRequestError(
sqlalchemy.exc.InvalidRequestError: Mapper 'Mapper[Cliente(cliente)]' has no property 'ventas'.  If this property was indicated from other mappers or configure events, ensure registry.configure() has been called.
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:11:19] "[35m[1mGET / HTTP/1.1[0m" 500 -
ERROR:flask_migrate:Error: Directory migrations already exists and is not empty
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
ERROR:app:Exception on / [GET]
Traceback (most recent call last):
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\relationships.py", line 2419, in _determine_joins
    self.primaryjoin = join_condition(
                       ^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\sql\util.py", line 123, in join_condition
    return Join._join_condition(
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\sql\selectable.py", line 1358, in _join_condition
    raise exc.NoForeignKeysError(
sqlalchemy.exc.NoForeignKeysError: Can't find any foreign key relationships between 'vendedor' and 'venta'.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask\app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask\app.py", line 869, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask\app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask\app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\PracticasQQ\Practica2\Pract3\myapp\rutas\cliente\clientes.py", line 14, in inicial
    clientes = Cliente.query.all()
               ^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask_sqlalchemy\model.py", line 22, in __get__
    return cls.query_class(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\query.py", line 276, in __init__
    self._set_entities(entities)
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\query.py", line 288, in _set_entities
    self._raw_columns = [
                        ^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\query.py", line 289, in <listcomp>
    coercions.expect(
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\sql\coercions.py", line 406, in expect
    insp._post_inspect
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 1253, in __get__
    obj.__dict__[self.__name__] = result = self.fget(obj)
                                           ^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2707, in _post_inspect
    self._check_configure()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2386, in _check_configure
    _configure_registries({self.registry}, cascade=True)
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 4199, in _configure_registries
    _do_configure_registries(registries, cascade)
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 4240, in _do_configure_registries
    mapper._post_configure_properties()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2403, in _post_configure_properties
    prop.init()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\interfaces.py", line 579, in init
    self.do_init()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\relationships.py", line 1637, in do_init
    self._setup_join_conditions()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\relationships.py", line 1882, in _setup_join_conditions
    self._join_condition = jc = JoinCondition(
                                ^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\relationships.py", line 2306, in __init__
    self._determine_joins()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\relationships.py", line 2440, in _determine_joins
    raise sa_exc.NoForeignKeysError(
sqlalchemy.exc.NoForeignKeysError: Could not determine join condition between parent/child tables on relationship Vendedor.ventas - there are no foreign keys linking these tables.  Ensure that referencing columns are associated with a ForeignKey or ForeignKeyConstraint, or specify a 'primaryjoin' expression.
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:42:41] "[35m[1mGET / HTTP/1.1[0m" 500 -
ERROR:flask_migrate:Error: Directory migrations already exists and is not empty
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
ERROR:app:Exception on / [GET]
Traceback (most recent call last):
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask\app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask\app.py", line 869, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask\app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask\app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\PracticasQQ\Practica2\Pract3\myapp\rutas\cliente\clientes.py", line 14, in inicial
    clientes = Cliente.query.all()
               ^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask_sqlalchemy\model.py", line 22, in __get__
    return cls.query_class(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\query.py", line 276, in __init__
    self._set_entities(entities)
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\query.py", line 288, in _set_entities
    self._raw_columns = [
                        ^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\query.py", line 289, in <listcomp>
    coercions.expect(
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\sql\coercions.py", line 406, in expect
    insp._post_inspect
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 1253, in __get__
    obj.__dict__[self.__name__] = result = self.fget(obj)
                                           ^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2707, in _post_inspect
    self._check_configure()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2386, in _check_configure
    _configure_registries({self.registry}, cascade=True)
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 4199, in _configure_registries
    _do_configure_registries(registries, cascade)
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 4240, in _do_configure_registries
    mapper._post_configure_properties()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2403, in _post_configure_properties
    prop.init()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\interfaces.py", line 579, in init
    self.do_init()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\relationships.py", line 1634, in do_init
    self._process_dependent_arguments()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\relationships.py", line 1675, in _process_dependent_arguments
    rel_arg._resolve_against_registry(self._clsregistry_resolvers[1])
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\relationships.py", line 265, in _resolve_against_registry
    self.resolved = clsregistry_resolver(
                    ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\clsregistry.py", line 532, in __call__
    x = eval(self.arg, globals(), self._dict)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<string>", line 1, in <module>
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\clsregistry.py", line 367, in __getattr__
    raise AttributeError(
AttributeError: Class <class 'models.Venta'> does not have a mapped column named 'vendedor_id'
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:47:51] "[35m[1mGET / HTTP/1.1[0m" 500 -
ERROR:flask_migrate:Error: Directory migrations already exists and is not empty
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
ERROR:app:Exception on / [GET]
Traceback (most recent call last):
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask\app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask\app.py", line 869, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask\app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask\app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\PracticasQQ\Practica2\Pract3\myapp\rutas\cliente\clientes.py", line 14, in inicial
    clientes = Cliente.query.all()
               ^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask_sqlalchemy\model.py", line 22, in __get__
    return cls.query_class(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\query.py", line 276, in __init__
    self._set_entities(entities)
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\query.py", line 288, in _set_entities
    self._raw_columns = [
                        ^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\query.py", line 289, in <listcomp>
    coercions.expect(
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\sql\coercions.py", line 406, in expect
    insp._post_inspect
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 1253, in __get__
    obj.__dict__[self.__name__] = result = self.fget(obj)
                                           ^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2707, in _post_inspect
    self._check_configure()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2386, in _check_configure
    _configure_registries({self.registry}, cascade=True)
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 4199, in _configure_registries
    _do_configure_registries(registries, cascade)
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 4240, in _do_configure_registries
    mapper._post_configure_properties()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2403, in _post_configure_properties
    prop.init()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\interfaces.py", line 579, in init
    self.do_init()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\relationships.py", line 1637, in do_init
    self._setup_join_conditions()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\relationships.py", line 1882, in _setup_join_conditions
    self._join_condition = jc = JoinCondition(
                                ^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\relationships.py", line 2315, in __init__
    self._check_foreign_cols(self.primaryjoin, True)
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\relationships.py", line 2958, in _check_foreign_cols
    raise sa_exc.ArgumentError(err)
sqlalchemy.exc.ArgumentError: Could not locate any relevant foreign key columns for primary join condition 'vendedor.id = venta.id' on relationship Vendedor.ventas.  Ensure that referencing columns are associated with a ForeignKey or ForeignKeyConstraint, or are annotated in the join condition with the foreign() annotation.
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:49:41] "[35m[1mGET / HTTP/1.1[0m" 500 -
ERROR:app:Exception on / [GET]
Traceback (most recent call last):
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask\app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask\app.py", line 869, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask\app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask\app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\PracticasQQ\Practica2\Pract3\myapp\rutas\cliente\clientes.py", line 14, in inicial
    clientes = Cliente.query.all()
               ^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\flask_sqlalchemy\model.py", line 22, in __get__
    return cls.query_class(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\query.py", line 276, in __init__
    self._set_entities(entities)
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\query.py", line 288, in _set_entities
    self._raw_columns = [
                        ^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\query.py", line 289, in <listcomp>
    coercions.expect(
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\sql\coercions.py", line 406, in expect
    insp._post_inspect
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 1253, in __get__
    obj.__dict__[self.__name__] = result = self.fget(obj)
                                           ^^^^^^^^^^^^^^
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2707, in _post_inspect
    self._check_configure()
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2386, in _check_configure
    _configure_registries({self.registry}, cascade=True)
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 4199, in _configure_registries
    _do_configure_registries(registries, cascade)
  File "C:\Users\jacco\OneDrive\Documentos\Repositorios\MultiParadigTeam9\EntornosVirtuales\JosuePepFlask\Lib\site-packages\sqlalchemy\orm\mapper.py", line 4236, in _do_configure_registries
    raise e
sqlalchemy.exc.InvalidRequestError: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[Vendedor(vendedor)]'. Original exception was: Could not locate any relevant foreign key columns for primary join condition 'vendedor.id = venta.id' on relationship Vendedor.ventas.  Ensure that referencing columns are associated with a ForeignKey or ForeignKeyConstraint, or are annotated in the join condition with the foreign() annotation.
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:49:41] "[35m[1mGET / HTTP/1.1[0m" 500 -
ERROR:flask_migrate:Error: Directory migrations already exists and is not empty
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:50:35] "GET / HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:50:42] "GET /agregar HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:50:58] "[32mPOST /agregar HTTP/1.1[0m" 302 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:50:58] "GET /cliente/index HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:51:00] "GET /editar/2 HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:51:04] "[32mPOST /editar/2 HTTP/1.1[0m" 302 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:51:04] "GET /cliente/index HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:51:07] "[32mGET /eliminar/2 HTTP/1.1[0m" 302 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:51:07] "GET /cliente/index HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:51:09] "[32mGET /vendedor HTTP/1.1[0m" 308 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:51:09] "GET /vendedor/ HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:51:12] "GET /agregar HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:52:37] "[32mPOST /agregar HTTP/1.1[0m" 302 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:52:37] "GET /cliente/index HTTP/1.1" 200 -
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:53:05] "GET /cliente/index HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:53:05] "GET /cliente/index HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:53:11] "GET /vendedor/ HTTP/1.1" 200 -
INFO:werkzeug:[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
INFO:werkzeug:[33mPress CTRL+C to quit[0m
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:53:40] "GET /vendedor/ HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:53:43] "GET /agregar HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:53:46] "GET /vendedor/ HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:53:53] "GET /vendedor/ HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:53:54] "GET /vendedor/ HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:53:54] "GET /vendedor/ HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:53:54] "GET /vendedor/ HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:53:55] "GET /vendedor/ HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:53:55] "GET /vendedor/ HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:53:55] "GET /vendedor/ HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:54:15] "GET /agregar HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:54:29] "[32mPOST /agregar HTTP/1.1[0m" 302 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:54:29] "GET /cliente/index HTTP/1.1" 200 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:54:32] "[32mGET /eliminar/4 HTTP/1.1[0m" 302 -
INFO:werkzeug:127.0.0.1 - - [02/Nov/2023 01:54:32] "GET /cliente/index HTTP/1.1" 200 -
